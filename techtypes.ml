open Types

(* Computer tech *)
type comp =
  | Comp_none
  | Comp_battle_scanner
  | Comp_ecm_jammer_mark_i
  | Comp_unused_2
  | Comp_deep_space_scanner
  | Comp_battle_computer_mark_ii
  | Comp_unused_5
  | Comp_ecm_jammer_mark_ii
  | Comp_improved_robotic_controls_iii
  | Comp_unused_8
  | Comp_battle_computer_mark_iii
  | Comp_unused_10
  | Comp_ecm_jammer_mark_iii
  | Comp_improved_space_scanner
  | Comp_unused_13
  | Comp_battle_computer_mark_iv
  | Comp_unused_15
  | Comp_ecm_jammer_mark_iv
  | Comp_improved_robotic_controls_iv
  | Comp_unused_18
  | Comp_battle_computer_mark_v
  | Comp_unused_20
  | Comp_ecm_jammer_mark_v
  | Comp_advanced_space_scanner
  | Comp_unused_23
  | Comp_battle_computer_mark_vi
  | Comp_unused_25
  | Comp_ecm_jammer_mark_vi
  | Comp_improved_robotic_controls_v
  | Comp_unused_28
  | Comp_battle_computer_mark_vii
  | Comp_unused_30
  | Comp_ecm_jammer_mark_vii
  | Comp_unused_32
  | Comp_hyperspace_communications
  | Comp_battle_computer_mark_viii
  | Comp_unused_35
  | Comp_ecm_jammer_mark_viii
  | Comp_improved_robotic_controls_vi
  | Comp_unused_38
  | Comp_battle_computer_mark_ix
  | Comp_unused_40
  | Comp_ecm_jammer_mark_ix
  | Comp_unused_42
  | Comp_unused_43
  | Comp_battle_computer_mark_x
  | Comp_oracle_interface
  | Comp_ecm_jammer_mark_x
  | Comp_improved_robotic_controls_vii
  | Comp_technology_nullifier
  | Comp_battle_computer_mark_xi
  [@@deriving enum]

let comp_to_tech x = comp_to_enum x |> Tech.of_int

(* Construction tech *)
type cons =
  | Cons_none
  | Cons_reserve_fuel_tanks
  | Cons_unused_1
  | Cons_improved_industrial_tech_9
  | Cons_unused_3
  | Cons_reduced_industrial_waste_80
  | Cons_unused_5
  | Cons_unused_6
  | Cons_improved_industrial_tech_8
  | Cons_unused_8
  | Cons_duralloy_armor
  | Cons_battle_suits
  | Cons_unused_11
  | Cons_improved_industrial_tech_7
  | Cons_automated_repair_system
  | Cons_reduced_industrial_waste_60
  | Cons_unused_15
  | Cons_zortium_armor
  | Cons_improved_industrial_tech_6
  | Cons_unused_18
  | Cons_unused_19
  | Cons_unused_20
  | Cons_unused_21
  | Cons_improved_industrial_tech_5
  | Cons_armored_exoskeleton
  | Cons_reduced_industrial_waste_40
  | Cons_andrium_armor
  | Cons_unused_26
  | Cons_improved_industrial_tech_4
  | Cons_unused_28
  | Cons_unused_29
  | Cons_unused_30
  | Cons_unused_31
  | Cons_improved_industrial_tech_3
  | Cons_tritanium_armor
  | Cons_reduced_industrial_waste_20
  | Cons_advanced_damage_control
  | Cons_unused_36
  | Cons_improved_industrial_tech_2
  | Cons_unused_38
  | Cons_powered_armor
  | Cons_unused_40
  | Cons_adamantium_armor
  | Cons_unused_42
  | Cons_unused_43
  | Cons_industrial_waste_elimination
  | Cons_unused_45
  | Cons_unused_46
  | Cons_unused_47
  | Cons_unused_48
  | Cons_neutronium_armor
  [@@deriving enum]

let cons_to_tech x = cons_to_enum x |> Tech.of_int

(* Force field tech *)
type ffld =
  | Ffld_none
  | Ffld_class_i_deflector_shields
  | Ffld_unused_1
  | Ffld_unused_2
  | Ffld_class_ii_deflector_shields
  | Ffld_unused_4
  | Ffld_unused_5
  | Ffld_unused_6
  | Ffld_personal_deflector_shield
  | Ffld_unused_8
  | Ffld_class_iii_deflector_shields
  | Ffld_unused_10
  | Ffld_class_v_planetary_shield
  | Ffld_unused_12
  | Ffld_class_iv_deflector_shields
  | Ffld_unused_14
  | Ffld_repulsor_beam
  | Ffld_unused_16
  | Ffld_unused_17
  | Ffld_unused_18
  | Ffld_class_v_deflector_shields
  | Ffld_personal_absorption_shield
  | Ffld_class_x_planetary_shield
  | Ffld_unused_22
  | Ffld_class_vi_deflector_shields
  | Ffld_unused_24
  | Ffld_unused_25
  | Ffld_cloaking_device
  | Ffld_unused_27
  | Ffld_unused_28
  | Ffld_class_vii_deflector_shields
  | Ffld_zyro_shield
  | Ffld_class_xv_planetary_shield
  | Ffld_unused_32
  | Ffld_class_ix_deflector_shields
  | Ffld_unused_34
  | Ffld_unused_35
  | Ffld_stasis_field
  | Ffld_personal_barrier_shield
  | Ffld_unused_38
  | Ffld_class_xi_deflector_shields
  | Ffld_unused_40
  | Ffld_class_xx_planetary_shield
  | Ffld_black_hole_generator
  | Ffld_class_xiii_deflector_shields
  | Ffld_unused_44
  | Ffld_lightning_shield
  | Ffld_unused_46
  | Ffld_unused_47
  | Ffld_unused_48
  | Ffld_class_xv_deflector_shields
  [@@deriving enum]

let ffld_to_tech x = ffld_to_enum x |> Tech.of_int

(* Planetary tech *)
type plan =
  | Plan_none
  | Plan_ecological_restoration
  | Plan_improved_terraforming_10
  | Plan_controlled_barren_env
  | Plan_unused_3
  | Plan_improved_eco_restoration
  | Plan_controlled_tundra_env
  | Plan_unused_6
  | Plan_improved_terraforming_20
  | Plan_controlled_dead_env
  | Plan_death_spores
  | Plan_unused_10
  | Plan_controlled_inferno_env
  | Plan_enhanced_eco_restoration
  | Plan_improved_terraforming_30
  | Plan_controlled_toxic_env
  | Plan_soil_enrichment
  | Plan_bio_toxin_antidote
  | Plan_controlled_radiated_env
  | Plan_unused_18
  | Plan_improved_terraforming_40
  | Plan_cloning
  | Plan_atmospheric_terraforming
  | Plan_unused_22
  | Plan_advanced_eco_restoration
  | Plan_unused_24
  | Plan_improved_terraforming_50
  | Plan_doom_virus
  | Plan_unused_27
  | Plan_unused_28
  | Plan_advanced_soil_enrichment
  | Plan_unused_30
  | Plan_improved_terraforming_60
  | Plan_unused_32
  | Plan_complete_eco_restoration
  | Plan_unused_34
  | Plan_universal_antidote
  | Plan_unused_36
  | Plan_improved_terraforming_80
  | Plan_unused_38
  | Plan_bio_terminator
  | Plan_unused_40
  | Plan_advanced_cloning
  | Plan_unused_42
  | Plan_improved_terraforming_100
  | Plan_unused_44
  | Plan_unused_45
  | Plan_unused_46
  | Plan_unused_47
  | Plan_unused_48
  | Plan_complete_terraforming
  [@@deriving enum]

let plan_to_tech x = plan_to_enum x |> Tech.of_int

(* Propulsion tech *)
type prop =
  | Prop_none
  | Prop_retro_engines
  | Prop_unused_1
  | Prop_hydrogen_fuel_cells
  | Prop_unused_3
  | Prop_deuterium_fuel_cells
  | Prop_nuclear_engines
  | Prop_unused_6
  | Prop_unused_7
  | Prop_irridium_fuel_cells
  | Prop_inertial_stabilizer
  | Prop_unused_10
  | Prop_sub_light_drives
  | Prop_unused_12
  | Prop_dotomite_crystals
  | Prop_unused_14
  | Prop_energy_pulsar
  | Prop_unused_16
  | Prop_fusion_drives
  | Prop_uridium_fuel_cells
  | Prop_warp_dissipator
  | Prop_unused_20
  | Prop_unused_21
  | Prop_reajax_ii_fuel_cells
  | Prop_impulse_drives
  | Prop_unused_24
  | Prop_unused_25
  | Prop_intergalactic_star_gates
  | Prop_unused_27
  | Prop_trilithium_crystals
  | Prop_ion_drives
  | Prop_unused_30
  | Prop_unused_31
  | Prop_unused_32
  | Prop_high_energy_focus
  | Prop_unused_34
  | Prop_anti_matter_drives
  | Prop_unused_36
  | Prop_sub_space_teleporter
  | Prop_unused_38
  | Prop_ionic_pulsar
  | Prop_thorium_cells
  | Prop_inter_phased_drives
  | Prop_sub_space_interdictor
  | Prop_unused_43
  | Prop_combat_transporters
  | Prop_inertial_nullifier
  | Prop_unused_46
  | Prop_hyper_drives
  | Prop_unused_48
  | Prop_displacement_device
  [@@deriving enum]

let prop_to_tech x = prop_to_enum x |> Tech.of_int

(* Weapon tech *)
type weap =
  | Weap_none
  | Weap_lasers
  | Weap_hand_lasers
  | Weap_unused_2
  | Weap_hyper_v_rockets
  | Weap_gatling_laser
  | Weap_anti_missile_rockets
  | Weap_neutron_pellet_gun
  | Weap_hyper_x_rockets
  | Weap_fusion_bomb
  | Weap_ion_cannon
  | Weap_scatter_pack_v_rockets
  | Weap_ion_rifle
  | Weap_mass_driver
  | Weap_merculite_missiles
  | Weap_neutron_blaster
  | Weap_anti_matter_bomb
  | Weap_graviton_beam
  | Weap_stinger_missiles
  | Weap_hard_beam
  | Weap_fusion_beam
  | Weap_ion_stream_projector
  | Weap_omega_v_bomb
  | Weap_anti_matter_torpedoes
  | Weap_fusion_rifle
  | Weap_megabolt_cannon
  | Weap_phasor
  | Weap_scatter_pack_vii_missiles
  | Weap_auto_blaster
  | Weap_pulson_missiles
  | Weap_tachyon_beam
  | Weap_hand_phasor
  | Weap_gauss_autocannon
  | Weap_particle_beam
  | Weap_hercular_missiles
  | Weap_plasma_cannon
  | Weap_death_ray
  | Weap_disruptor
  | Weap_pulse_phasor
  | Weap_neutronium_bomb
  | Weap_hellfire_torpedoes
  | Weap_zeon_missiles
  | Weap_plasma_rifle
  | Weap_proton_torpedoes
  | Weap_scatter_pack_x_missiles
  | Weap_tri_focus_plasma_cannon
  | Weap_stellar_converter
  | Weap_neutron_stream_projector
  | Weap_mauler_device
  | Weap_unused_48
  | Weap_plasma_torpedoes
  [@@deriving enum]

let weap_to_tech x = weap_to_enum x |> Tech.of_int
